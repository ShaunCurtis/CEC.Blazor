@namespace CEC.Blazor.Components
@inherits ControlBase
@typeparam TRecord

@if (this.IsPagination)
{
    <div class="pagination ml-2 flex-nowrap">
        <nav aria-label="Page navigation">
            <ul class="pagination mb-1">
                @if (this.DisplayType != PagingDisplayType.Narrow)
                {
                    @if (this.DisplayType == PagingDisplayType.FullwithoutPageSize)
                    {
                        <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.ChangeBlockAsync(-1, false))">1&laquo;</button></li>
                    }
                    else
                    {
                        <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.ChangeBlockAsync(-1, false))">&laquo;</button></li>
                    }
                    <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.MoveOnePageAsync(-1))">Previous</button></li>
                    @for (int i = this.Paging.StartPage; i <= this.Paging.EndPage; i++)
                    {
                        var currentpage = i;
                        <li class="page-item @(currentpage == this.Paging.CurrentPage ? "active" : "")"><button class="page-link" @onclick="(e => this.Paging.GoToPageAsync(currentpage))">@currentpage</button></li>
                    }
                    <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.MoveOnePageAsync(1))">Next</button></li>
                    @if (this.DisplayType == PagingDisplayType.FullwithoutPageSize)
                    {
                        <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.ChangeBlockAsync(1, false))">&raquo;@this.Paging.TotalPages</button></li>
                    }
                    else
                    {
                        <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.ChangeBlockAsync(1, false))">&raquo;</button></li>
                    }
                }
                else
                {
                    <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.MoveOnePageAsync(-1))">1&laquo;</button></li>
                    @for (int i = this.Paging.StartPage; i <= this.Paging.EndPage; i++)
                    {
                        var currentpage = i;
                        <li class="page-item @(currentpage == this.Paging.CurrentPage ? "active" : "")"><button class="page-link" @onclick="(e => this.Paging.GoToPageAsync(currentpage))">@currentpage</button></li>
                    }
                    <li class="page-item"><button class="page-link" @onclick="(e => this.Paging.MoveOnePageAsync(1))">&raquo;@this.Paging.TotalPages</button></li>
                }
            </ul>
        </nav>
        @if (this.DisplayType == PagingDisplayType.Full)
        {
            <span class="pagebutton btn btn-link btn-sm disabled mr-1">Page @this.Paging.CurrentPage of @this.Paging.TotalPages</span>
        }
    </div>
}
